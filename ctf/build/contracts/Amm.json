{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Token",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "contract Token",
          "name": "_token1",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deltaX",
          "type": "uint256"
        }
      ],
      "name": "getDeltaY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deltaY",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountFromUser",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "token1ForUser",
          "type": "bool"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "contract Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Amm.sol",
    "1": "contracts/Token.sol"
  },
  "ast": {
    "absolutePath": "contracts/Amm.sol",
    "exportedSymbols": {
      "Amm": [
        125
      ],
      "Token": [
        411
      ]
    },
    "id": 126,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/Token.sol",
        "file": "./Token.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 126,
        "sourceUnit": 412,
        "src": "99:34:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "Token",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "107:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Amm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 125,
        "linearizedBaseContracts": [
          125
        ],
        "name": "Amm",
        "nameLocation": "144:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 6,
            "mutability": "immutable",
            "name": "token0",
            "nameLocation": "442:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "419:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$411",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "Token",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 411,
                "src": "419:5:0"
              },
              "referencedDeclaration": 411,
              "src": "419:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$411",
                "typeString": "contract Token"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d21220a7",
            "id": 9,
            "mutability": "immutable",
            "name": "token1",
            "nameLocation": "491:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "468:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$411",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "Token",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 411,
                "src": "468:5:0"
              },
              "referencedDeclaration": 411,
              "src": "468:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$411",
                "typeString": "contract Token"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "582:59:0",
              "statements": [
                {
                  "expression": {
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "592:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19,
                      "name": "_token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "601:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "592:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$411",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "592:16:0"
                },
                {
                  "expression": {
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "618:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23,
                      "name": "_token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "627:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "618:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$411",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "618:16:0"
                }
              ]
            },
            "id": 27,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "_token0",
                  "nameLocation": "545:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "539:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Token_$411",
                    "typeString": "contract Token"
                  },
                  "typeName": {
                    "id": 11,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10,
                      "name": "Token",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 411,
                      "src": "539:5:0"
                    },
                    "referencedDeclaration": 411,
                    "src": "539:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$411",
                      "typeString": "contract Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "568:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "562:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Token_$411",
                    "typeString": "contract Token"
                  },
                  "typeName": {
                    "id": 14,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13,
                      "name": "Token",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 411,
                      "src": "562:5:0"
                    },
                    "referencedDeclaration": 411,
                    "src": "562:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$411",
                      "typeString": "contract Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "529:52:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:0"
            },
            "scope": 125,
            "src": "518:123:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1003:721:0",
              "statements": [
                {
                  "assignments": [
                    36
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "token_to_user",
                      "nameLocation": "1037:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1031:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      },
                      "typeName": {
                        "id": 35,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34,
                          "name": "Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 411,
                          "src": "1031:5:0"
                        },
                        "referencedDeclaration": 411,
                        "src": "1031:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$411",
                          "typeString": "contract Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41,
                  "initialValue": {
                    "condition": {
                      "id": 37,
                      "name": "token1ForUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1055:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 39,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1080:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1055:31:0",
                    "trueExpression": {
                      "id": 38,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1071:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$411",
                      "typeString": "contract Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1031:55:0"
                },
                {
                  "assignments": [
                    44
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "token_from_user",
                      "nameLocation": "1102:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1096:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      },
                      "typeName": {
                        "id": 43,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42,
                          "name": "Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 411,
                          "src": "1096:5:0"
                        },
                        "referencedDeclaration": 411,
                        "src": "1096:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$411",
                          "typeString": "contract Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49,
                  "initialValue": {
                    "condition": {
                      "id": 45,
                      "name": "token1ForUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1120:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 47,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1145:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1120:31:0",
                    "trueExpression": {
                      "id": 46,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1136:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$411",
                        "typeString": "contract Token"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$411",
                      "typeString": "contract Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1096:55:0"
                },
                {
                  "assignments": [
                    51
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51,
                      "mutability": "mutable",
                      "name": "amount_to_user",
                      "nameLocation": "1166:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
                      "src": "1161:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1161:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1257:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Amm_$125",
                                  "typeString": "contract Amm"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Amm_$125",
                                  "typeString": "contract Amm"
                                }
                              ],
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1249:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 55,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1249:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1249:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53,
                            "name": "token_from_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "1223:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$411",
                              "typeString": "contract Token"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 205,
                          "src": "1223:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1223:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1326:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Amm_$125",
                                  "typeString": "contract Amm"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Amm_$125",
                                  "typeString": "contract Amm"
                                }
                              ],
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1318:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 62,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1318:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1318:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 60,
                            "name": "token_to_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1292:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$411",
                              "typeString": "contract Token"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 205,
                          "src": "1292:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1292:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 67,
                        "name": "amountFromUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1361:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52,
                      "name": "getDeltaY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1185:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:200:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1161:224:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1476:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1476:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1523:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Amm_$125",
                              "typeString": "contract Amm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Amm_$125",
                              "typeString": "contract Amm"
                            }
                          ],
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1515:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1515:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1515:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79,
                        "name": "amountFromUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1557:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70,
                        "name": "token_from_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1419:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$411",
                          "typeString": "contract Token"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 322,
                      "src": "1419:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1419:162:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:162:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87,
                            "name": "token_to_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1650:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$411",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$411",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1642:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1642:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1642:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89,
                        "name": "amount_to_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1693:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 82,
                        "name": "token_to_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1591:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$411",
                          "typeString": "contract Token"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 265,
                      "src": "1591:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:126:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:126:0"
                }
              ]
            },
            "functionSelector": "2aea6605",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "925:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "amountFromUser",
                  "nameLocation": "947:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "939:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "token1ForUser",
                  "nameLocation": "976:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "971:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "929:66:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:0:0"
            },
            "scope": 125,
            "src": "916:808:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1955:97:0",
              "statements": [
                {
                  "assignments": [
                    106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "mutability": "mutable",
                      "name": "num",
                      "nameLocation": "1970:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "1965:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1965:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 107,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1976:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 108,
                      "name": "deltaX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1980:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1976:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1965:21:0"
                },
                {
                  "assignments": [
                    112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "den",
                      "nameLocation": "2001:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "1996:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 111,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1996:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 113,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "2007:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 114,
                      "name": "deltaX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "2011:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2007:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1996:21:0"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "deltaY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "2027:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 118,
                        "name": "num",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2036:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 119,
                        "name": "den",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2042:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2036:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2027:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2027:18:0"
                }
              ]
            },
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "1730:105:0",
              "text": "We have:\n \u0394y = (-y\u0394x)/(x+\u0394x)\n For full derivation, see ../docs/getDeltaY/result.svg."
            },
            "functionSelector": "79317171",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeltaY",
            "nameLocation": "1849:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1873:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1868:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1889:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1884:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "deltaX",
                  "nameLocation": "1905:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1900:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1858:59:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "deltaY",
                  "nameLocation": "1947:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1939:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1938:16:0"
            },
            "scope": 125,
            "src": "1840:212:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 126,
        "src": "135:1919:0",
        "usedErrors": []
      }
    ],
    "src": "0:2054:0"
  },
  "bytecode": "60c060405234801561001057600080fd5b506040516105ba3803806105ba83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516104e76100d36000396000818160d001528181610121015261014c01526000818160560152818160fb015261017201526104e76000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dfe1681146100515780632aea66051461009557806379317171146100aa578063d21220a7146100cb575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a86100a33660046103a9565b6100f2565b005b6100bd6100b83660046103d9565b610367565b60405190815260200161008c565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60008161011f577f0000000000000000000000000000000000000000000000000000000000000000610141565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600082610170577f0000000000000000000000000000000000000000000000000000000000000000610192565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516370a0823160e01b8152306004820152909150600090610272906001600160a01b038416906370a0823190602401602060405180830381865afa1580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102049190610405565b6040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c9190610405565b87610367565b6040516323b872dd60e01b8152336004820152306024820152604481018790529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec919061041e565b5060405163a9059cbb60e01b81526001600160a01b03841660048201819052602482018390529063a9059cbb906044016020604051808303816000875af115801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f919061041e565b505050505050565b6000806103748385610458565b905060006103828487610477565b905061038e818361048f565b9695505050505050565b80151581146103a657600080fd5b50565b600080604083850312156103bc57600080fd5b8235915060208301356103ce81610398565b809150509250929050565b6000806000606084860312156103ee57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561041757600080fd5b5051919050565b60006020828403121561043057600080fd5b815161043b81610398565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561047257610472610442565b500290565b6000821982111561048a5761048a610442565b500190565b6000826104ac57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220cfdf300cace0e12d2410ae51917abd7322f9615702835df4ada0b77a7a58b8d564736f6c634300080b0033",
  "bytecodeSha1": "3a342af17f489b0b40659af6b8ed51fcf2a31553",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Amm",
  "coverageMap": {
    "branches": {
      "0": {
        "Amm.swap": {
          "3": [
            1055,
            1068,
            true
          ],
          "4": [
            1120,
            1133,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "Amm.getDeltaY": {
          "2": [
            2027,
            2045
          ]
        },
        "Amm.swap": {
          "0": [
            1419,
            1581
          ],
          "1": [
            1591,
            1717
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "Token"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dfe1681146100515780632aea66051461009557806379317171146100aa578063d21220a7146100cb575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a86100a33660046103a9565b6100f2565b005b6100bd6100b83660046103d9565b610367565b60405190815260200161008c565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60008161011f577f0000000000000000000000000000000000000000000000000000000000000000610141565b7f00000000000000000000000000000000000000000000000000000000000000005b9050600082610170577f0000000000000000000000000000000000000000000000000000000000000000610192565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516370a0823160e01b8152306004820152909150600090610272906001600160a01b038416906370a0823190602401602060405180830381865afa1580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102049190610405565b6040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c9190610405565b87610367565b6040516323b872dd60e01b8152336004820152306024820152604481018790529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec919061041e565b5060405163a9059cbb60e01b81526001600160a01b03841660048201819052602482018390529063a9059cbb906044016020604051808303816000875af115801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f919061041e565b505050505050565b6000806103748385610458565b905060006103828487610477565b905061038e818361048f565b9695505050505050565b80151581146103a657600080fd5b50565b600080604083850312156103bc57600080fd5b8235915060208301356103ce81610398565b809150509250929050565b6000806000606084860312156103ee57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561041757600080fd5b5051919050565b60006020828403121561043057600080fd5b815161043b81610398565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561047257610472610442565b500290565b6000821982111561048a5761048a610442565b500190565b6000826104ac57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220cfdf300cace0e12d2410ae51917abd7322f9615702835df4ada0b77a7a58b8d564736f6c634300080b0033",
  "deployedSourceMap": "135:1919:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:29;;;;;;;;-1:-1:-1;;;;;191:32:2;;;173:51;;161:2;146:18;419:29:0;;;;;;;;916:808;;;;;;:::i;:::-;;:::i;:::-;;1840:212;;;;;;:::i;:::-;;:::i;:::-;;;1139:25:2;;;1127:2;1112:18;1840:212:0;993:177:2;468:29:0;;;;;916:808;1031:19;1055:13;:31;;1080:6;1055:31;;;1071:6;1055:31;1031:55;;1096:21;1120:13;:31;;1145:6;1120:31;;;1136:6;1120:31;1223:40;;-1:-1:-1;;;1223:40:0;;1257:4;1223:40;;;173:51:2;1096:55:0;;-1:-1:-1;1161:19:0;;1185:200;;-1:-1:-1;;;;;1223:25:0;;;;;146:18:2;;1223:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292;;-1:-1:-1;;;1292:40:0;;1326:4;1292:40;;;173:51:2;-1:-1:-1;;;;;1292:25:0;;;;;146:18:2;;1292:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1361:14;1185:9;:200::i;:::-;1419:162;;-1:-1:-1;;;1419:162:0;;1476:10;1419:162;;;1812:34:2;1523:4:0;1862:18:2;;;1855:43;1914:18;;;1907:34;;;1161:224:0;;-1:-1:-1;;;;;;1419:28:0;;;;;1747:18:2;;1419:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1591:126:0;;-1:-1:-1;;;1591:126:0;;-1:-1:-1;;;;;1591:22:0;;:126;;;2376:51:2;;;2443:18;;;2436:34;;;1591:22:0;;;2349:18:2;;1591:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1003:721;;;916:808;;:::o;1840:212::-;1939:14;;1976:10;1980:6;1976:1;:10;:::i;:::-;1965:21;-1:-1:-1;1996:8:0;2007:10;2011:6;2007:1;:10;:::i;:::-;1996:21;-1:-1:-1;2036:9:0;1996:21;2036:3;:9;:::i;:::-;2027:18;1840:212;-1:-1:-1;;;;;;1840:212:0:o;235:118:2:-;321:5;314:13;307:21;300:5;297:32;287:60;;343:1;340;333:12;287:60;235:118;:::o;358:309::-;423:6;431;484:2;472:9;463:7;459:23;455:32;452:52;;;500:1;497;490:12;452:52;536:9;523:23;513:33;;596:2;585:9;581:18;568:32;609:28;631:5;609:28;:::i;:::-;656:5;646:15;;;358:309;;;;;:::o;672:316::-;749:6;757;765;818:2;806:9;797:7;793:23;789:32;786:52;;;834:1;831;824:12;786:52;-1:-1:-1;;857:23:2;;;927:2;912:18;;899:32;;-1:-1:-1;978:2:2;963:18;;;950:32;;672:316;-1:-1:-1;672:316:2:o;1383:184::-;1453:6;1506:2;1494:9;1485:7;1481:23;1477:32;1474:52;;;1522:1;1519;1512:12;1474:52;-1:-1:-1;1545:16:2;;1383:184;-1:-1:-1;1383:184:2:o;1952:245::-;2019:6;2072:2;2060:9;2051:7;2047:23;2043:32;2040:52;;;2088:1;2085;2078:12;2040:52;2120:9;2114:16;2139:28;2161:5;2139:28;:::i;:::-;2186:5;1952:245;-1:-1:-1;;;1952:245:2:o;2481:127::-;2542:10;2537:3;2533:20;2530:1;2523:31;2573:4;2570:1;2563:15;2597:4;2594:1;2587:15;2613:168;2653:7;2719:1;2715;2711:6;2707:14;2704:1;2701:21;2696:1;2689:9;2682:17;2678:45;2675:71;;;2726:18;;:::i;:::-;-1:-1:-1;2766:9:2;;2613:168::o;2786:128::-;2826:3;2857:1;2853:6;2850:1;2847:13;2844:39;;;2863:18;;:::i;:::-;-1:-1:-1;2899:9:2;;2786:128::o;2919:217::-;2959:1;2985;2975:132;;3029:10;3024:3;3020:20;3017:1;3010:31;3064:4;3061:1;3054:15;3092:4;3089:1;3082:15;2975:132;-1:-1:-1;3121:9:2;;2919:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getDeltaY(uint256,uint256,uint256)": {
        "notice": "We have: \u0394y = (-y\u0394x)/(x+\u0394x) For full derivation, see ../docs/getDeltaY/result.svg."
      }
    },
    "version": 1
  },
  "offset": [
    135,
    2054
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2AEA6605 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x79317171 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0xA3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8C JUMP JUMPDEST PUSH2 0x78 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x11F JUMPI PUSH32 0x0 PUSH2 0x141 JUMP JUMPDEST PUSH32 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x170 JUMPI PUSH32 0x0 PUSH2 0x192 JUMP JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x272 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x405 JUMP JUMPDEST DUP8 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x374 DUP4 DUP6 PUSH2 0x458 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x382 DUP5 DUP8 PUSH2 0x477 JUMP JUMPDEST SWAP1 POP PUSH2 0x38E DUP2 DUP4 PUSH2 0x48F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3CE DUP2 PUSH2 0x398 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x43B DUP2 PUSH2 0x398 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x472 JUMPI PUSH2 0x472 PUSH2 0x442 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x48A JUMPI PUSH2 0x48A PUSH2 0x442 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xDF ADDRESS 0xC 0xAC 0xE0 0xE1 0x2D 0x24 LT 0xAE MLOAD SWAP2 PUSH27 0xBD7322F9615702835DF4ADA0B77A7A58B8D564736F6C634300080B STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        135,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDFE1681"
    },
    "38": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2AEA6605"
    },
    "49": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "53": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79317171"
    },
    "60": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "64": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD21220A7"
    },
    "71": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "75": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        135,
        2054
      ],
      "op": "REVERT",
      "path": "0"
    },
    "81": {
      "offset": [
        419,
        448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78"
    },
    "85": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "118": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "JUMP",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "123": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "130": {
      "op": "SHL"
    },
    "131": {
      "op": "SUB"
    },
    "132": {
      "op": "SWAP1"
    },
    "133": {
      "op": "SWAP2"
    },
    "134": {
      "op": "AND"
    },
    "135": {
      "op": "DUP2"
    },
    "136": {
      "op": "MSTORE"
    },
    "137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "139": {
      "op": "ADD"
    },
    "140": {
      "offset": [
        419,
        448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "143": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "144": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "DUP1",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "SUB",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        419,
        448
      ],
      "op": "RETURN",
      "path": "0"
    },
    "149": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8"
    },
    "153": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "156": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "157": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "159": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "162": {
      "fn": "Amm.swap",
      "jump": "i",
      "offset": [
        916,
        1724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "163": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "167": {
      "fn": "Amm.swap",
      "jump": "i",
      "offset": [
        916,
        1724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "168": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "169": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "STOP",
      "path": "0"
    },
    "170": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "171": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD"
    },
    "174": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "177": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "178": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "180": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "183": {
      "fn": "Amm.getDeltaY",
      "jump": "i",
      "offset": [
        1840,
        2052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "184": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "188": {
      "fn": "Amm.getDeltaY",
      "jump": "i",
      "offset": [
        1840,
        2052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "189": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "190": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "192": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "193": {
      "op": "SWAP1"
    },
    "194": {
      "op": "DUP2"
    },
    "195": {
      "op": "MSTORE"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "198": {
      "op": "ADD"
    },
    "199": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "202": {
      "op": "JUMP"
    },
    "203": {
      "offset": [
        468,
        497
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "204": {
      "fn": "Amm.getDeltaY",
      "offset": [
        468,
        497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78"
    },
    "207": {
      "fn": "Amm.getDeltaY",
      "offset": [
        468,
        497
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "240": {
      "fn": "Amm.getDeltaY",
      "offset": [
        468,
        497
      ],
      "op": "DUP2",
      "path": "0"
    },
    "241": {
      "fn": "Amm.getDeltaY",
      "offset": [
        468,
        497
      ],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "Amm.swap",
      "offset": [
        1031,
        1050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "245": {
      "branch": 3,
      "fn": "Amm.swap",
      "offset": [
        1055,
        1068
      ],
      "op": "DUP2",
      "path": "0"
    },
    "246": {
      "fn": "Amm.swap",
      "offset": [
        1055,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "249": {
      "branch": 3,
      "fn": "Amm.swap",
      "offset": [
        1055,
        1086
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "250": {
      "fn": "Amm.swap",
      "offset": [
        1080,
        1086
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "283": {
      "fn": "Amm.swap",
      "offset": [
        1055,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "286": {
      "fn": "Amm.swap",
      "offset": [
        1055,
        1086
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "Amm.swap",
      "offset": [
        1055,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "Amm.swap",
      "offset": [
        1071,
        1077
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "321": {
      "fn": "Amm.swap",
      "offset": [
        1055,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "Amm.swap",
      "offset": [
        1031,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "323": {
      "fn": "Amm.swap",
      "offset": [
        1031,
        1086
      ],
      "op": "POP",
      "path": "0"
    },
    "324": {
      "fn": "Amm.swap",
      "offset": [
        1096,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "326": {
      "branch": 4,
      "fn": "Amm.swap",
      "offset": [
        1120,
        1133
      ],
      "op": "DUP3",
      "path": "0"
    },
    "327": {
      "fn": "Amm.swap",
      "offset": [
        1120,
        1151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "330": {
      "branch": 4,
      "fn": "Amm.swap",
      "offset": [
        1120,
        1151
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "331": {
      "fn": "Amm.swap",
      "offset": [
        1145,
        1151
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "364": {
      "fn": "Amm.swap",
      "offset": [
        1120,
        1151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192"
    },
    "367": {
      "fn": "Amm.swap",
      "offset": [
        1120,
        1151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "Amm.swap",
      "offset": [
        1120,
        1151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "Amm.swap",
      "offset": [
        1136,
        1142
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "402": {
      "fn": "Amm.swap",
      "offset": [
        1120,
        1151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "403": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "405": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "406": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "415": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "416": {
      "fn": "Amm.swap",
      "offset": [
        1257,
        1261
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "417": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "419": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP3",
      "path": "0"
    },
    "420": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "ADD",
      "path": "0"
    },
    "421": {
      "op": "MSTORE"
    },
    "422": {
      "fn": "Amm.swap",
      "offset": [
        1096,
        1151
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "423": {
      "fn": "Amm.swap",
      "offset": [
        1096,
        1151
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "424": {
      "op": "POP"
    },
    "425": {
      "fn": "Amm.swap",
      "offset": [
        1161,
        1180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "427": {
      "fn": "Amm.swap",
      "offset": [
        1161,
        1180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "428": {
      "fn": "Amm.swap",
      "offset": [
        1185,
        1385
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272"
    },
    "431": {
      "fn": "Amm.swap",
      "offset": [
        1185,
        1385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "438": {
      "op": "SHL"
    },
    "439": {
      "op": "SUB"
    },
    "440": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1248
      ],
      "op": "DUP5",
      "path": "0"
    },
    "441": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1248
      ],
      "op": "AND",
      "path": "0"
    },
    "442": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "443": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1248
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "448": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1248
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "451": {
      "op": "ADD"
    },
    "452": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "454": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "456": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "457": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "458": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP4",
      "path": "0"
    },
    "459": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "SUB",
      "path": "0"
    },
    "460": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "461": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP7",
      "path": "0"
    },
    "462": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "GAS",
      "path": "0"
    },
    "463": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "464": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "465": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "466": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "467": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "470": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "471": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "472": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "474": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "475": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "476": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "477": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "479": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "REVERT",
      "path": "0"
    },
    "480": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "481": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "POP",
      "path": "0"
    },
    "482": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "POP",
      "path": "0"
    },
    "483": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "POP",
      "path": "0"
    },
    "484": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "POP",
      "path": "0"
    },
    "485": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "487": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "488": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "489": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "491": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "NOT",
      "path": "0"
    },
    "492": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "494": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP3",
      "path": "0"
    },
    "495": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "ADD",
      "path": "0"
    },
    "496": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "AND",
      "path": "0"
    },
    "497": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP3",
      "path": "0"
    },
    "498": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "ADD",
      "path": "0"
    },
    "499": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "500": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "502": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "503": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "POP",
      "path": "0"
    },
    "504": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "505": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "ADD",
      "path": "0"
    },
    "506": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "507": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x204"
    },
    "510": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "511": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "512": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x405"
    },
    "515": {
      "fn": "Amm.swap",
      "jump": "i",
      "offset": [
        1223,
        1263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "516": {
      "fn": "Amm.swap",
      "offset": [
        1223,
        1263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "517": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "519": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "520": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "527": {
      "op": "SHL"
    },
    "528": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP2",
      "path": "0"
    },
    "529": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "530": {
      "fn": "Amm.swap",
      "offset": [
        1326,
        1330
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "531": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "533": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP3",
      "path": "0"
    },
    "534": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "ADD",
      "path": "0"
    },
    "535": {
      "op": "MSTORE"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "SUB"
    },
    "544": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1317
      ],
      "op": "DUP7",
      "path": "0"
    },
    "545": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1317
      ],
      "op": "AND",
      "path": "0"
    },
    "546": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1317
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "552": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "555": {
      "op": "ADD"
    },
    "556": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "558": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "560": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "561": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "0"
    },
    "562": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP4",
      "path": "0"
    },
    "563": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "SUB",
      "path": "0"
    },
    "564": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP2",
      "path": "0"
    },
    "565": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP7",
      "path": "0"
    },
    "566": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "GAS",
      "path": "0"
    },
    "567": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "568": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "569": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "571": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248"
    },
    "574": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "575": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "576": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "578": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "0"
    },
    "579": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "580": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "581": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "583": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "REVERT",
      "path": "0"
    },
    "584": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "585": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "POP",
      "path": "0"
    },
    "586": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "POP",
      "path": "0"
    },
    "587": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "POP",
      "path": "0"
    },
    "588": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "POP",
      "path": "0"
    },
    "589": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "591": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "592": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "593": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "595": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "NOT",
      "path": "0"
    },
    "596": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "598": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP3",
      "path": "0"
    },
    "599": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "ADD",
      "path": "0"
    },
    "600": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "AND",
      "path": "0"
    },
    "601": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP3",
      "path": "0"
    },
    "602": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "ADD",
      "path": "0"
    },
    "603": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "0"
    },
    "604": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "606": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "607": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "POP",
      "path": "0"
    },
    "608": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP2",
      "path": "0"
    },
    "609": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "ADD",
      "path": "0"
    },
    "610": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "611": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26C"
    },
    "614": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "615": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "616": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x405"
    },
    "619": {
      "fn": "Amm.swap",
      "jump": "i",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMP",
      "path": "0"
    },
    "620": {
      "fn": "Amm.swap",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "621": {
      "fn": "Amm.swap",
      "offset": [
        1361,
        1375
      ],
      "op": "DUP8",
      "path": "0"
    },
    "622": {
      "fn": "Amm.swap",
      "offset": [
        1185,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "625": {
      "fn": "Amm.swap",
      "jump": "i",
      "offset": [
        1185,
        1385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "626": {
      "fn": "Amm.swap",
      "offset": [
        1185,
        1385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "627": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x40"
    },
    "629": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "630": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP2",
      "path": "0"
    },
    "639": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "640": {
      "fn": "Amm.swap",
      "offset": [
        1476,
        1486
      ],
      "op": "CALLER",
      "path": "0"
    },
    "641": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "643": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP3",
      "path": "0"
    },
    "644": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "ADD",
      "path": "0"
    },
    "645": {
      "op": "MSTORE"
    },
    "646": {
      "fn": "Amm.swap",
      "offset": [
        1523,
        1527
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "649": {
      "op": "DUP3"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "MSTORE"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "654": {
      "op": "DUP2"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "op": "DUP8"
    },
    "657": {
      "op": "SWAP1"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "fn": "Amm.swap",
      "offset": [
        1161,
        1385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "660": {
      "fn": "Amm.swap",
      "offset": [
        1161,
        1385
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "SUB"
    },
    "670": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1447
      ],
      "op": "DUP4",
      "path": "0"
    },
    "671": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1447
      ],
      "op": "AND",
      "path": "0"
    },
    "672": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1447
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "673": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1447
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "678": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1447
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "684": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "686": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "687": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "688": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP4",
      "path": "0"
    },
    "689": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "SUB",
      "path": "0"
    },
    "690": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP2",
      "path": "0"
    },
    "691": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "693": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP8",
      "path": "0"
    },
    "694": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "GAS",
      "path": "0"
    },
    "695": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "CALL",
      "path": "0"
    },
    "696": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "697": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "698": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "699": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "702": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "703": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "704": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "706": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "707": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "708": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "709": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "711": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "REVERT",
      "path": "0"
    },
    "712": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "POP",
      "path": "0"
    },
    "714": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "POP",
      "path": "0"
    },
    "715": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "POP",
      "path": "0"
    },
    "716": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "POP",
      "path": "0"
    },
    "717": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "719": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "720": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "721": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "723": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "NOT",
      "path": "0"
    },
    "724": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "726": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP3",
      "path": "0"
    },
    "727": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "AND",
      "path": "0"
    },
    "729": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP3",
      "path": "0"
    },
    "730": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "ADD",
      "path": "0"
    },
    "731": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "732": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "734": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "735": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "POP",
      "path": "0"
    },
    "736": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "DUP2",
      "path": "0"
    },
    "737": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "ADD",
      "path": "0"
    },
    "738": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC"
    },
    "742": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "743": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "744": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E"
    },
    "747": {
      "fn": "Amm.swap",
      "jump": "i",
      "offset": [
        1419,
        1581
      ],
      "op": "JUMP",
      "path": "0"
    },
    "748": {
      "fn": "Amm.swap",
      "offset": [
        1419,
        1581
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "749": {
      "op": "POP"
    },
    "750": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "752": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "753": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "762": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "SUB"
    },
    "771": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1613
      ],
      "op": "DUP5",
      "path": "0"
    },
    "772": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1613
      ],
      "op": "AND",
      "path": "0"
    },
    "773": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "775": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "776": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "ADD",
      "path": "0"
    },
    "777": {
      "op": "DUP2"
    },
    "778": {
      "op": "SWAP1"
    },
    "779": {
      "op": "MSTORE"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "782": {
      "op": "DUP3"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "op": "DUP4"
    },
    "785": {
      "op": "SWAP1"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "788": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1613
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "793": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "796": {
      "op": "ADD"
    },
    "797": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "799": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "801": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "802": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "803": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP4",
      "path": "0"
    },
    "804": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "SUB",
      "path": "0"
    },
    "805": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "806": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "808": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP8",
      "path": "0"
    },
    "809": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "GAS",
      "path": "0"
    },
    "810": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "CALL",
      "path": "0"
    },
    "811": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "812": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "813": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "814": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B"
    },
    "817": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "818": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "819": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "821": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "822": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "823": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "824": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "826": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "REVERT",
      "path": "0"
    },
    "827": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "828": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "POP",
      "path": "0"
    },
    "829": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "POP",
      "path": "0"
    },
    "830": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "POP",
      "path": "0"
    },
    "831": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "POP",
      "path": "0"
    },
    "832": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "834": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "835": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "836": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "838": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "NOT",
      "path": "0"
    },
    "839": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "841": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "842": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "ADD",
      "path": "0"
    },
    "843": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "AND",
      "path": "0"
    },
    "844": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "845": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "ADD",
      "path": "0"
    },
    "846": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "847": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "849": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "850": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "POP",
      "path": "0"
    },
    "851": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "852": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "ADD",
      "path": "0"
    },
    "853": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "854": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35F"
    },
    "857": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "858": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "859": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E"
    },
    "862": {
      "fn": "Amm.swap",
      "jump": "i",
      "offset": [
        1591,
        1717
      ],
      "op": "JUMP",
      "path": "0"
    },
    "863": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "864": {
      "fn": "Amm.swap",
      "offset": [
        1591,
        1717
      ],
      "op": "POP",
      "path": "0"
    },
    "865": {
      "fn": "Amm.swap",
      "offset": [
        1003,
        1724
      ],
      "op": "POP",
      "path": "0"
    },
    "866": {
      "fn": "Amm.swap",
      "offset": [
        1003,
        1724
      ],
      "op": "POP",
      "path": "0"
    },
    "867": {
      "fn": "Amm.swap",
      "offset": [
        1003,
        1724
      ],
      "op": "POP",
      "path": "0"
    },
    "868": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "POP",
      "path": "0"
    },
    "869": {
      "fn": "Amm.swap",
      "offset": [
        916,
        1724
      ],
      "op": "POP",
      "path": "0"
    },
    "870": {
      "fn": "Amm.swap",
      "jump": "o",
      "offset": [
        916,
        1724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "871": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "872": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1939,
        1953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "874": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1939,
        1953
      ],
      "op": "DUP1",
      "path": "0"
    },
    "875": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1976,
        1986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "878": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1980,
        1986
      ],
      "op": "DUP4",
      "path": "0"
    },
    "879": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1976,
        1977
      ],
      "op": "DUP6",
      "path": "0"
    },
    "880": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1976,
        1986
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x458"
    },
    "883": {
      "fn": "Amm.getDeltaY",
      "jump": "i",
      "offset": [
        1976,
        1986
      ],
      "op": "JUMP",
      "path": "0"
    },
    "884": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1976,
        1986
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "885": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1965,
        1986
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1996,
        2004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "889": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2007,
        2017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x382"
    },
    "892": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2011,
        2017
      ],
      "op": "DUP5",
      "path": "0"
    },
    "893": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2007,
        2008
      ],
      "op": "DUP8",
      "path": "0"
    },
    "894": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2007,
        2017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x477"
    },
    "897": {
      "fn": "Amm.getDeltaY",
      "jump": "i",
      "offset": [
        2007,
        2017
      ],
      "op": "JUMP",
      "path": "0"
    },
    "898": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2007,
        2017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "899": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1996,
        2017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "900": {
      "op": "POP"
    },
    "901": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2036,
        2045
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x38E"
    },
    "904": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1996,
        2017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "905": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2036,
        2039
      ],
      "op": "DUP4",
      "path": "0"
    },
    "906": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2036,
        2045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "909": {
      "fn": "Amm.getDeltaY",
      "jump": "i",
      "offset": [
        2036,
        2045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "910": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2036,
        2045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "911": {
      "fn": "Amm.getDeltaY",
      "offset": [
        2027,
        2045
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "912": {
      "fn": "Amm.getDeltaY",
      "offset": [
        1840,
        2052
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "fn": "Amm.getDeltaY",
      "jump": "o",
      "offset": [
        1840,
        2052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "920": {
      "op": "JUMPDEST"
    },
    "921": {
      "op": "DUP1"
    },
    "922": {
      "op": "ISZERO"
    },
    "923": {
      "op": "ISZERO"
    },
    "924": {
      "op": "DUP2"
    },
    "925": {
      "op": "EQ"
    },
    "926": {
      "op": "PUSH2",
      "value": "0x3A6"
    },
    "929": {
      "op": "JUMPI"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "932": {
      "op": "DUP1"
    },
    "933": {
      "op": "REVERT"
    },
    "934": {
      "op": "JUMPDEST"
    },
    "935": {
      "op": "POP"
    },
    "936": {
      "jump": "o",
      "op": "JUMP"
    },
    "937": {
      "op": "JUMPDEST"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "940": {
      "op": "DUP1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "943": {
      "op": "DUP4"
    },
    "944": {
      "op": "DUP6"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "op": "SLT"
    },
    "947": {
      "op": "ISZERO"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x3BC"
    },
    "951": {
      "op": "JUMPI"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "954": {
      "op": "DUP1"
    },
    "955": {
      "op": "REVERT"
    },
    "956": {
      "op": "JUMPDEST"
    },
    "957": {
      "op": "DUP3"
    },
    "958": {
      "op": "CALLDATALOAD"
    },
    "959": {
      "op": "SWAP2"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "963": {
      "op": "DUP4"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "CALLDATALOAD"
    },
    "966": {
      "op": "PUSH2",
      "value": "0x3CE"
    },
    "969": {
      "op": "DUP2"
    },
    "970": {
      "op": "PUSH2",
      "value": "0x398"
    },
    "973": {
      "jump": "i",
      "op": "JUMP"
    },
    "974": {
      "op": "JUMPDEST"
    },
    "975": {
      "op": "DUP1"
    },
    "976": {
      "op": "SWAP2"
    },
    "977": {
      "op": "POP"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "op": "SWAP3"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "op": "SWAP3"
    },
    "982": {
      "op": "SWAP1"
    },
    "983": {
      "op": "POP"
    },
    "984": {
      "jump": "o",
      "op": "JUMP"
    },
    "985": {
      "op": "JUMPDEST"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "988": {
      "op": "DUP1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "993": {
      "op": "DUP5"
    },
    "994": {
      "op": "DUP7"
    },
    "995": {
      "op": "SUB"
    },
    "996": {
      "op": "SLT"
    },
    "997": {
      "op": "ISZERO"
    },
    "998": {
      "op": "PUSH2",
      "value": "0x3EE"
    },
    "1001": {
      "op": "JUMPI"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1004": {
      "op": "DUP1"
    },
    "1005": {
      "op": "REVERT"
    },
    "1006": {
      "op": "JUMPDEST"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "DUP2"
    },
    "1010": {
      "op": "CALLDATALOAD"
    },
    "1011": {
      "op": "SWAP4"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1014": {
      "op": "DUP4"
    },
    "1015": {
      "op": "ADD"
    },
    "1016": {
      "op": "CALLDATALOAD"
    },
    "1017": {
      "op": "SWAP4"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1021": {
      "op": "SWAP1"
    },
    "1022": {
      "op": "SWAP3"
    },
    "1023": {
      "op": "ADD"
    },
    "1024": {
      "op": "CALLDATALOAD"
    },
    "1025": {
      "op": "SWAP2"
    },
    "1026": {
      "op": "SWAP1"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "jump": "o",
      "op": "JUMP"
    },
    "1029": {
      "op": "JUMPDEST"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "DUP5"
    },
    "1036": {
      "op": "SUB"
    },
    "1037": {
      "op": "SLT"
    },
    "1038": {
      "op": "ISZERO"
    },
    "1039": {
      "op": "PUSH2",
      "value": "0x417"
    },
    "1042": {
      "op": "JUMPI"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1045": {
      "op": "DUP1"
    },
    "1046": {
      "op": "REVERT"
    },
    "1047": {
      "op": "JUMPDEST"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "op": "MLOAD"
    },
    "1050": {
      "op": "SWAP2"
    },
    "1051": {
      "op": "SWAP1"
    },
    "1052": {
      "op": "POP"
    },
    "1053": {
      "jump": "o",
      "op": "JUMP"
    },
    "1054": {
      "op": "JUMPDEST"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1059": {
      "op": "DUP3"
    },
    "1060": {
      "op": "DUP5"
    },
    "1061": {
      "op": "SUB"
    },
    "1062": {
      "op": "SLT"
    },
    "1063": {
      "op": "ISZERO"
    },
    "1064": {
      "op": "PUSH2",
      "value": "0x430"
    },
    "1067": {
      "op": "JUMPI"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1070": {
      "op": "DUP1"
    },
    "1071": {
      "op": "REVERT"
    },
    "1072": {
      "op": "JUMPDEST"
    },
    "1073": {
      "op": "DUP2"
    },
    "1074": {
      "op": "MLOAD"
    },
    "1075": {
      "op": "PUSH2",
      "value": "0x43B"
    },
    "1078": {
      "op": "DUP2"
    },
    "1079": {
      "op": "PUSH2",
      "value": "0x398"
    },
    "1082": {
      "jump": "i",
      "op": "JUMP"
    },
    "1083": {
      "op": "JUMPDEST"
    },
    "1084": {
      "op": "SWAP4"
    },
    "1085": {
      "op": "SWAP3"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "jump": "o",
      "op": "JUMP"
    },
    "1090": {
      "op": "JUMPDEST"
    },
    "1091": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1111": {
      "op": "REVERT"
    },
    "1112": {
      "op": "JUMPDEST"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1115": {
      "op": "DUP2"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1118": {
      "op": "NOT"
    },
    "1119": {
      "op": "DIV"
    },
    "1120": {
      "op": "DUP4"
    },
    "1121": {
      "op": "GT"
    },
    "1122": {
      "op": "DUP3"
    },
    "1123": {
      "op": "ISZERO"
    },
    "1124": {
      "op": "ISZERO"
    },
    "1125": {
      "op": "AND"
    },
    "1126": {
      "op": "ISZERO"
    },
    "1127": {
      "op": "PUSH2",
      "value": "0x472"
    },
    "1130": {
      "op": "JUMPI"
    },
    "1131": {
      "op": "PUSH2",
      "value": "0x472"
    },
    "1134": {
      "op": "PUSH2",
      "value": "0x442"
    },
    "1137": {
      "jump": "i",
      "op": "JUMP"
    },
    "1138": {
      "op": "JUMPDEST"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "op": "MUL"
    },
    "1141": {
      "op": "SWAP1"
    },
    "1142": {
      "jump": "o",
      "op": "JUMP"
    },
    "1143": {
      "op": "JUMPDEST"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1146": {
      "op": "DUP3"
    },
    "1147": {
      "op": "NOT"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "GT"
    },
    "1150": {
      "op": "ISZERO"
    },
    "1151": {
      "op": "PUSH2",
      "value": "0x48A"
    },
    "1154": {
      "op": "JUMPI"
    },
    "1155": {
      "op": "PUSH2",
      "value": "0x48A"
    },
    "1158": {
      "op": "PUSH2",
      "value": "0x442"
    },
    "1161": {
      "jump": "i",
      "op": "JUMP"
    },
    "1162": {
      "op": "JUMPDEST"
    },
    "1163": {
      "op": "POP"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "SWAP1"
    },
    "1166": {
      "jump": "o",
      "op": "JUMP"
    },
    "1167": {
      "op": "JUMPDEST"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1170": {
      "op": "DUP3"
    },
    "1171": {
      "op": "PUSH2",
      "value": "0x4AC"
    },
    "1174": {
      "op": "JUMPI"
    },
    "1175": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1185": {
      "op": "MSTORE"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1190": {
      "op": "MSTORE"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1195": {
      "op": "REVERT"
    },
    "1196": {
      "op": "JUMPDEST"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "op": "DIV"
    },
    "1199": {
      "op": "SWAP1"
    },
    "1200": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "86b097b852afbaec606cdb48e83bf69c9343558c",
  "source": "pragma solidity 0.8.11;\n// SPDX-License-Identifier: MIT\n\n/// @dev: Just using Token for simplicity\nimport {Token} from \"./Token.sol\";\n\ncontract Amm {\n    /*\n    ___ _        _                      _      _    _        \n    / __| |_ __ _| |_ ___  __ ____ _ _ _(_)__ _| |__| |___ ___\n    \\__ \\  _/ _` |  _/ -_) \\ V / _` | '_| / _` | '_ \\ / -_|_-<\n    |___/\\__\\__,_|\\__\\___|  \\_/\\__,_|_| |_\\__,_|_.__/_\\___/__/\n    */\n    Token public immutable token0; // = _token0;\n    Token public immutable token1; // = _token1;\n\n    constructor(\n        Token _token0,\n        Token _token1\n    ) {\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    /*\n    ___      _    _ _       __              _   _             \n    | _ \\_  _| |__| (_)__   / _|_  _ _ _  __| |_(_)___ _ _  ___\n    |  _/ || | '_ \\ | / _| |  _| || | ' \\/ _|  _| / _ \\ ' \\(_-<\n    |_|  \\_,_|_.__/_|_\\__| |_|  \\_,_|_||_\\__|\\__|_\\___/_||_/__/\n    */\n    function swap(\n        uint256 amountFromUser,\n        bool token1ForUser\n    ) public {\n        // Checks\n        Token token_to_user   = token1ForUser ? token1 : token0;\n        Token token_from_user = token1ForUser ? token0 : token1;\n        uint amount_to_user   = getDeltaY(\n            /*      x = */ token_from_user.balanceOf(address(this)),\n            /*      y = */ token_to_user  .balanceOf(address(this)),\n            /* deltaX = */ amountFromUser\n        );\n        // Interactions\n        token_from_user.transferFrom(\n            /*   from = */ msg.sender,\n            /*     to = */ address(this),\n            /* amount = */ amountFromUser\n        );\n        token_to_user.transfer(\n            /*     to = */ address(token_to_user),\n            /* amount = */ amount_to_user\n        );\n    }\n\n    /// We have:\n    /// \u0394y = (-y\u0394x)/(x+\u0394x)\n    /// For full derivation, see ../docs/getDeltaY/result.svg.\n    function getDeltaY(\n        uint x,\n        uint y,\n        uint deltaX\n    ) public pure returns (uint256 deltaY) {\n        uint num = y * deltaX;\n        uint den = x + deltaX;\n        deltaY = num / den;\n    }\n}",
  "sourceMap": "135:1919:0:-:0;;;518:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;592:16:0;;;;;618;;;135:1919;;14:184:2;100:13;;-1:-1:-1;;;;;142:31:2;;132:42;;122:70;;188:1;185;178:12;122:70;14:184;;;:::o;203:333::-;308:6;316;369:2;357:9;348:7;344:23;340:32;337:52;;;385:1;382;375:12;337:52;408:47;445:9;408:47;:::i;:::-;398:57;;474:56;526:2;515:9;511:18;474:56;:::i;:::-;464:66;;203:333;;;;;:::o;:::-;135:1919:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Amm.sol",
  "type": "contract"
}